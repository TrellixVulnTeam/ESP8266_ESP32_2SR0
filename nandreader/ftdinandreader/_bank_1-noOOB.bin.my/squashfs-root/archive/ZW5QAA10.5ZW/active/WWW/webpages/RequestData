<%
	cgilua.lp.include("lp/xml.lp")
	local configurationData = cgilua.QUERY["ConfigurationData"]
	
	-- Handle WidgetAssurance XML query
	if configurationData == "WidgetAssurance" then
		xmlCreate(configurationData)
		cgilua.redirect("/Widget.xml")
        if cgilua.servervariable"SERVER_PORT" == "80" then
            local mode = 1
            local err = widgetXmlEncryptAndDecrypt(mode)
            if err == 1 then
                --If the encrypt operation is wrong, it would go to the restore warning page.
                cgilua.redirect("resultKO.lp")
            else
                cgilua.redirect("/Widget.kry")
            end
        end
		return
	end
	
    if cgilua.servervariable"SERVER_PORT" == "80" then
        -- Handle AGConfig XML query
        local CallerId = cgilua.QUERY["CallerId"]
        if configurationData==nil or CallerId==nil or CallerId=="" then
            httperror(400, "Bad Request")
            return
        end	
        
        if tonumber(CallerId) < 800 or tonumber(CallerId) >850 then
            httperror(530, "Client SW not valid")
            return
        end
	end
	local isRightObj = string.find(configurationData, "Device.")
	if configurationData=="Device" or isRightObj ~= nil then
        local devPath = tostring(configurationData)
        local reply, error = mbus.getParameters{ path = devPath, datamodel = "second" }
        if reply[devPath][1].param~=nil and next(reply[devPath][1].param)~=nil then
		    xmlCreate(configurationData)	
    		cgilua.redirect("/AGConfig.xml")
        else
            httperror(412, "Precondition failed")
            return
        end
	else
		httperror(400, "Bad Request")
		return
	end
%>
